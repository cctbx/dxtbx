from __future__ import annotations

from collections.abc import Sequence
from typing import Any, Generic, TypeVar, overload

import pycbf

import scitbx.array_family.flex as flex

T = TypeVar("T")

class ImageTypedBase(Generic[T]):
    """Not a real class, only used here for abstract bases"""

    def __init__(self, data: Sequence[T], /) -> None: ...
    def __len__(self) -> int: ...
    def empty(self) -> bool: ...
    def n_tiles(self) -> int: ...

class ImageBool(ImageTypedBase[bool]):
    @overload
    def __init__(self, data: flex.bool, /) -> None: ...
    def append(self, *args, **kwargs) -> Any: ...
    def tile(dxtbx, unsignedlong) -> Any: ...
    def tile_names(dxtbx) -> Any: ...
    def __getitem__(dxtbx, unsignedlong) -> Any: ...
    def __iter__(boost) -> Any: ...

class ImageDouble(ImageTypedBase[float]):
    @overload
    def __init__(self, data: flex.double, /) -> None: ...
    def append(self, *args, **kwargs) -> Any: ...
    def tile(dxtbx, unsignedlong) -> Any: ...
    def tile_names(dxtbx) -> Any: ...
    def __getitem__(dxtbx, unsignedlong) -> Any: ...
    def __iter__(boost) -> Any: ...

class ImageInt(ImageTypedBase[int]):
    @overload
    def __init__(self, data: flex.int, /) -> None: ...
    def append(self, *args, **kwargs) -> Any: ...
    def tile(dxtbx, unsignedlong) -> Any: ...
    def tile_names(dxtbx) -> Any: ...
    def __getitem__(dxtbx, unsignedlong) -> Any: ...
    def __iter__(boost) -> Any: ...

class ImageBuffer:
    def __init__(self, *args, **kwargs) -> None: ...
    def as_double(dxtbx) -> Any: ...
    def as_float(dxtbx) -> Any: ...
    def as_int(dxtbx) -> Any: ...
    def is_double(dxtbx) -> Any: ...
    def is_empty(dxtbx) -> Any: ...
    def is_float(dxtbx) -> Any: ...
    def is_int(dxtbx) -> Any: ...
    def __reduce__(self) -> Any: ...

class ImageTileBool:
    def __init__(self, *args, **kwargs) -> None: ...
    def data(dxtbx) -> Any: ...
    def empty(dxtbx) -> Any: ...
    def name(dxtbx) -> Any: ...
    def __getinitargs__(dxtbx) -> Any: ...
    def __reduce__(self) -> Any: ...

class ImageTileDouble:
    def __init__(self, *args, **kwargs) -> None: ...
    def data(dxtbx) -> Any: ...
    def empty(dxtbx) -> Any: ...
    def name(dxtbx) -> Any: ...
    def __getinitargs__(dxtbx) -> Any: ...
    def __reduce__(self) -> Any: ...

class ImageTileInt:
    def __init__(self, *args, **kwargs) -> None: ...
    def data(dxtbx) -> Any: ...
    def empty(dxtbx) -> Any: ...
    def name(dxtbx) -> Any: ...
    def __getinitargs__(dxtbx) -> Any: ...
    def __reduce__(self) -> Any: ...

def cbf_read_buffer(
    handle: pycbf.cbf_handle_struct, buffer: bytes, flags: int
) -> None: ...
