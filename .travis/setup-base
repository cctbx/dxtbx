#!/bin/bash

EXPECTED_CACHE_REVISION=20191018-python3

if [ "$TRAVIS_EVENT_TYPE" == "cron" ]; then
  echo -e "\e[31;1mCron job build detected. Invalidating cache.\e[0m"
  rm -f $HOME/build_dials/.cache_valid
  rm -f $HOME/build_dials/.build_complete
fi

if [ -f $HOME/build_dials/.cache_valid ] && [ "$EXPECTED_CACHE_REVISION" == "$(cat $HOME/build_dials/.cache_valid)" ]; then
  echo -e "\e[1mCache probably valid\e[0m"
else
  echo -e "\e[31;1mThis is not the cache you are looking for: Starting from scratch\e[0m"
  cd $HOME
  wget https://dials.diamond.ac.uk/diamond_builds/dials-linux-x86_64-conda3.tar.gz -O - | tar xz
  cd dials-installer-dev
  ./install --nopycompile --verbose --prefix=..
  cd ..

  # Destroy existing cache
  rm -rf build_dials

  # Fix up build path
  mv dials-dev* build_dials
  sed -i -e 's/dials-dev[0-9]\+/build_dials/g' build_dials/build/setpaths.sh

  # Enter environment
  . build_dials/build/setpaths.sh

  # Clean out the build directory, cctbx insists on rebuilding everything anyway
  # Then disable dials, xia2 and downstream modules - these are not needed for testing
  cd build_dials/build
  libtbx.configure . --exclude=dials,iota,prime,xia2,xfel
  make clean
  rm -rf dials iota prime xia2 xfel
  cd ../..

  # Remove unused modules
  cd build_dials/modules
  for MODULE in *; do
    case $MODULE in
      cctbx_project|gui_resources|msgpack*|scons) echo keeping $MODULE;;
      *)
        RAWMODULE=${MODULE%_adaptbx}
        libtbx.list_modules | grep -q "^${RAWMODULE}$" && echo keeping $MODULE || {
          echo --- removing $MODULE
          rm -rf $MODULE
        }
      ;;
    esac
  done
  cd cctbx_project
  for MODULE in *; do
    case $MODULE in
      fast_linalg) echo keeping $MODULE;;
      *)
        RAWMODULE=${MODULE%_adaptbx}
        libtbx.list_modules | grep -q "^${RAWMODULE}$" && echo keeping cctbx_project/$MODULE || {
          echo --- removing cctbx_project/$MODULE
          rm -rf $MODULE
        }
    esac
  done
  cd ../../..

  # Define this as a valid base install
  echo $EXPECTED_CACHE_REVISION>$HOME/build_dials/.cache_valid
fi
